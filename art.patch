diff --git a/app/boards/shields/nice_view/widgets/art.c b/app/boards/shields/nice_view/widgets/art.c
index 56c89146..f26fce3f 100644
--- a/app/boards/shields/nice_view/widgets/art.c
+++ b/app/boards/shields/nice_view/widgets/art.c
@@ -227,3 +227,208 @@ const lv_img_dsc_t mountain = {
     .data_size = 1232,
     .data = mountain_map,
 };
+
+
+/*
+- 68x140 monochrome bitmap, rotated 90deg clockwise
+- convert 'LVGL v8' color format CF_INDEXED_1BIT into 'C array'
+    https://lvgl.io/tools/imageconverter
+- copy all AFTER #ifndef LV_ATTRIBUTE_MEM_ALIGN block
+- paste at end of app\boards\shields\nice_view\widgets\art.c
+- copy the #if CONFIG_NICE_VIEW_WIDGET_INVERTED block into the ..._map[] block
+    from one of the other images.
+- in app\boards\shields\nice_view\widgets\peripheral_status.c add
+    LV_IMG_DECLARE(...);
+- edit lv_img_set_src(art, ...); in the same file
+ */
+
+
+#ifndef LV_ATTRIBUTE_IMG_SZ_INV
+#define LV_ATTRIBUTE_IMG_SZ_INV
+#endif
+
+const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_SZ_INV uint8_t sz_inv_map[] = {
+#if CONFIG_NICE_VIEW_WIDGET_INVERTED
+        0xff, 0xff, 0xff, 0xff, /*Color of index 0*/
+        0x00, 0x00, 0x00, 0xff, /*Color of index 1*/
+#else
+        0x00, 0x00, 0x00, 0xff, /*Color of index 0*/
+        0xff, 0xff, 0xff, 0xff, /*Color of index 1*/
+#endif
+
+  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0,
+  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0,
+  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0,
+  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0,
+  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0,
+  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0,
+  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0,
+  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0,
+  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0,
+  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0,
+  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0,
+  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0,
+  0xff, 0xf8, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0,
+  0xff, 0xe0, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0,
+  0xff, 0xc0, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0,
+  0xff, 0x80, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0,
+  0xff, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0,
+  0xfe, 0x00, 0xe0, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0,
+  0xfe, 0x03, 0xf8, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0,
+  0xfc, 0x07, 0xfc, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0,
+  0xfc, 0x0f, 0xfc, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0,
+  0xfc, 0x0f, 0xfc, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0,
+  0xfc, 0x0f, 0xfc, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0,
+  0xf8, 0x1f, 0xfc, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0,
+  0xf8, 0x1f, 0xfc, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0,
+  0xf8, 0x1f, 0xfc, 0x07, 0xfe, 0x07, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x0f, 0xf8, 0x1f, 0xff, 0xff, 0xff, 0xf0,
+  0xf8, 0x0f, 0xfc, 0x07, 0xf8, 0x01, 0xff, 0xfc, 0x07, 0xff, 0x84, 0x07, 0xf0, 0x07, 0xff, 0xf8, 0x03, 0xf0,
+  0xfc, 0x0f, 0xfc, 0x0f, 0xf0, 0x00, 0xff, 0xf0, 0x01, 0xff, 0x00, 0x03, 0xe0, 0x03, 0xff, 0xc0, 0x01, 0xf0,
+  0xfc, 0x07, 0xfc, 0x0f, 0xf0, 0x00, 0x7f, 0xe0, 0x00, 0xff, 0x00, 0x03, 0xe0, 0x01, 0xfe, 0x00, 0x01, 0xf0,
+  0xfc, 0x07, 0xfc, 0x0f, 0xe0, 0x00, 0x3f, 0xc0, 0x00, 0x7f, 0x00, 0x81, 0xc0, 0xc0, 0xfc, 0x00, 0x01, 0xf0,
+  0xfe, 0x03, 0xfe, 0x1f, 0xc0, 0x30, 0x1f, 0xc0, 0x70, 0x3f, 0x00, 0xc1, 0xc1, 0xe0, 0x78, 0x00, 0x01, 0xf0,
+  0xfe, 0x00, 0xff, 0xff, 0xc0, 0xfc, 0x1f, 0x81, 0xf8, 0x3f, 0x01, 0xc1, 0x81, 0xf0, 0x38, 0x0e, 0x03, 0xf0,
+  0xff, 0x00, 0x7f, 0xff, 0x81, 0xfc, 0x1f, 0x81, 0xf8, 0x1f, 0x01, 0xc3, 0x83, 0xf0, 0x38, 0x3c, 0x03, 0xf0,
+  0xff, 0x80, 0x3f, 0xff, 0x81, 0xfc, 0x0f, 0x83, 0xf8, 0x1f, 0x01, 0xe7, 0x83, 0xf0, 0x3c, 0x78, 0x07, 0xf0,
+  0xff, 0xc0, 0x0f, 0xff, 0x81, 0xfe, 0x0f, 0xc3, 0xfc, 0x1f, 0x03, 0xff, 0x03, 0xf0, 0x3f, 0xf0, 0x0f, 0xf0,
+  0xff, 0xf0, 0x03, 0xff, 0x03, 0xfe, 0x0f, 0xe3, 0xfc, 0x1f, 0x03, 0xff, 0x03, 0xf0, 0x3f, 0xf0, 0x1f, 0xf0,
+  0xff, 0xf8, 0x01, 0xff, 0x03, 0xfe, 0x0f, 0xff, 0xfc, 0x0f, 0x03, 0xff, 0x03, 0xe0, 0x3f, 0xe0, 0x3f, 0xf0,
+  0xff, 0xfe, 0x00, 0x7f, 0x03, 0xfe, 0x0f, 0xfc, 0x00, 0x0f, 0x03, 0xff, 0x01, 0xc0, 0x7f, 0xc0, 0x7f, 0xf0,
+  0xff, 0xff, 0x00, 0x3f, 0x03, 0xfe, 0x0f, 0xf0, 0x00, 0x0f, 0x03, 0xff, 0x00, 0x00, 0x7f, 0x80, 0xff, 0xf0,
+  0xff, 0xff, 0xc0, 0x1f, 0x03, 0xfe, 0x0f, 0xc0, 0x00, 0x0f, 0x03, 0xff, 0x00, 0x00, 0xff, 0x01, 0xff, 0xf0,
+  0xff, 0xff, 0xe0, 0x0f, 0x03, 0xfe, 0x0f, 0x80, 0x00, 0x0f, 0x03, 0xff, 0x00, 0x03, 0xfe, 0x03, 0xff, 0xf0,
+  0xff, 0xff, 0xf8, 0x07, 0x03, 0xfe, 0x0f, 0x00, 0x78, 0x0f, 0x03, 0xff, 0x00, 0x0f, 0xfc, 0x07, 0xff, 0xf0,
+  0xfc, 0xff, 0xfc, 0x07, 0x03, 0xfc, 0x0f, 0x01, 0xfc, 0x0f, 0x03, 0xff, 0x07, 0xff, 0xfc, 0x0f, 0xff, 0xf0,
+  0xf8, 0x3f, 0xfe, 0x03, 0x03, 0xfc, 0x0e, 0x03, 0xf8, 0x0f, 0x03, 0xff, 0x03, 0xff, 0x78, 0x0f, 0xff, 0xf0,
+  0xf0, 0x1f, 0xfe, 0x03, 0x81, 0xfc, 0x1e, 0x03, 0xf8, 0x0f, 0x03, 0xff, 0x03, 0xfc, 0x10, 0x1f, 0xff, 0xf0,
+  0xf0, 0x0f, 0xfe, 0x03, 0x81, 0xf8, 0x1e, 0x03, 0xf0, 0x0f, 0x03, 0xff, 0x03, 0xf0, 0x10, 0x3e, 0x07, 0xf0,
+  0xf8, 0x01, 0xfc, 0x07, 0x80, 0x60, 0x3f, 0x01, 0xc0, 0x0f, 0x03, 0xff, 0x81, 0xc0, 0x10, 0x30, 0x03, 0xf0,
+  0xfc, 0x00, 0x00, 0x07, 0xc0, 0x00, 0x3f, 0x00, 0x00, 0x0f, 0x03, 0xff, 0x80, 0x00, 0x30, 0x00, 0x01, 0xf0,
+  0xfe, 0x00, 0x00, 0x0f, 0xe0, 0x00, 0x7f, 0x80, 0x00, 0x0f, 0x03, 0xff, 0xc0, 0x00, 0x70, 0x00, 0x01, 0xf0,
+  0xff, 0xc0, 0x00, 0x3f, 0xf0, 0x01, 0xff, 0xc0, 0x00, 0x0f, 0x03, 0xff, 0xe0, 0x00, 0xf0, 0x00, 0x3f, 0xf0,
+  0xff, 0xf8, 0x00, 0xff, 0xfc, 0x03, 0xff, 0xf0, 0x0c, 0x1f, 0x83, 0xff, 0xf0, 0x07, 0xfc, 0x03, 0xff, 0xf0,
+  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0,
+  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0,
+  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0,
+  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0,
+  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0,
+  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0,
+  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0,
+  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0,
+  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0,
+  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0,
+  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0,
+  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0,
+  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0,
+  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0,
+  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0,
+  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0,
+  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf0,
+};
+
+const lv_img_dsc_t sz_inv = {
+  .header.cf = LV_IMG_CF_INDEXED_1BIT,
+  .header.always_zero = 0,
+  .header.reserved = 0,
+  .header.w = 140,
+  .header.h = 68,
+  .data_size = 1232,
+  .data = sz_inv_map,
+};
+
+
+
+#ifndef LV_ATTRIBUTE_IMG_SZ
+#define LV_ATTRIBUTE_IMG_SZ
+#endif
+
+const LV_ATTRIBUTE_MEM_ALIGN LV_ATTRIBUTE_LARGE_CONST LV_ATTRIBUTE_IMG_SZ uint8_t sz_map[] = {
+#if CONFIG_NICE_VIEW_WIDGET_INVERTED
+        0xff, 0xff, 0xff, 0xff, /*Color of index 0*/
+        0x00, 0x00, 0x00, 0xff, /*Color of index 1*/
+#else
+        0x00, 0x00, 0x00, 0xff, /*Color of index 0*/
+        0xff, 0xff, 0xff, 0xff, /*Color of index 1*/
+#endif
+
+  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+  0x00, 0x07, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+  0x00, 0x1f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+  0x00, 0x3f, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+  0x00, 0x7f, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+  0x00, 0xff, 0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+  0x01, 0xff, 0x1f, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+  0x01, 0xfc, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+  0x03, 0xf8, 0x03, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+  0x03, 0xf0, 0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+  0x03, 0xf0, 0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+  0x03, 0xf0, 0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+  0x07, 0xe0, 0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+  0x07, 0xe0, 0x03, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+  0x07, 0xe0, 0x03, 0xf8, 0x01, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf0, 0x07, 0xe0, 0x00, 0x00, 0x00, 0x00,
+  0x07, 0xf0, 0x03, 0xf8, 0x07, 0xfe, 0x00, 0x03, 0xf8, 0x00, 0x7b, 0xf8, 0x0f, 0xf8, 0x00, 0x07, 0xfc, 0x00,
+  0x03, 0xf0, 0x03, 0xf0, 0x0f, 0xff, 0x00, 0x0f, 0xfe, 0x00, 0xff, 0xfc, 0x1f, 0xfc, 0x00, 0x3f, 0xfe, 0x00,
+  0x03, 0xf8, 0x03, 0xf0, 0x0f, 0xff, 0x80, 0x1f, 0xff, 0x00, 0xff, 0xfc, 0x1f, 0xfe, 0x01, 0xff, 0xfe, 0x00,
+  0x03, 0xf8, 0x03, 0xf0, 0x1f, 0xff, 0xc0, 0x3f, 0xff, 0x80, 0xff, 0x7e, 0x3f, 0x3f, 0x03, 0xff, 0xfe, 0x00,
+  0x01, 0xfc, 0x01, 0xe0, 0x3f, 0xcf, 0xe0, 0x3f, 0x8f, 0xc0, 0xff, 0x3e, 0x3e, 0x1f, 0x87, 0xff, 0xfe, 0x00,
+  0x01, 0xff, 0x00, 0x00, 0x3f, 0x03, 0xe0, 0x7e, 0x07, 0xc0, 0xfe, 0x3e, 0x7e, 0x0f, 0xc7, 0xf1, 0xfc, 0x00,
+  0x00, 0xff, 0x80, 0x00, 0x7e, 0x03, 0xe0, 0x7e, 0x07, 0xe0, 0xfe, 0x3c, 0x7c, 0x0f, 0xc7, 0xc3, 0xfc, 0x00,
+  0x00, 0x7f, 0xc0, 0x00, 0x7e, 0x03, 0xf0, 0x7c, 0x07, 0xe0, 0xfe, 0x18, 0x7c, 0x0f, 0xc3, 0x87, 0xf8, 0x00,
+  0x00, 0x3f, 0xf0, 0x00, 0x7e, 0x01, 0xf0, 0x3c, 0x03, 0xe0, 0xfc, 0x00, 0xfc, 0x0f, 0xc0, 0x0f, 0xf0, 0x00,
+  0x00, 0x0f, 0xfc, 0x00, 0xfc, 0x01, 0xf0, 0x1c, 0x03, 0xe0, 0xfc, 0x00, 0xfc, 0x0f, 0xc0, 0x0f, 0xe0, 0x00,
+  0x00, 0x07, 0xfe, 0x00, 0xfc, 0x01, 0xf0, 0x00, 0x03, 0xf0, 0xfc, 0x00, 0xfc, 0x1f, 0xc0, 0x1f, 0xc0, 0x00,
+  0x00, 0x01, 0xff, 0x80, 0xfc, 0x01, 0xf0, 0x03, 0xff, 0xf0, 0xfc, 0x00, 0xfe, 0x3f, 0x80, 0x3f, 0x80, 0x00,
+  0x00, 0x00, 0xff, 0xc0, 0xfc, 0x01, 0xf0, 0x0f, 0xff, 0xf0, 0xfc, 0x00, 0xff, 0xff, 0x80, 0x7f, 0x00, 0x00,
+  0x00, 0x00, 0x3f, 0xe0, 0xfc, 0x01, 0xf0, 0x3f, 0xff, 0xf0, 0xfc, 0x00, 0xff, 0xff, 0x00, 0xfe, 0x00, 0x00,
+  0x00, 0x00, 0x1f, 0xf0, 0xfc, 0x01, 0xf0, 0x7f, 0xff, 0xf0, 0xfc, 0x00, 0xff, 0xfc, 0x01, 0xfc, 0x00, 0x00,
+  0x00, 0x00, 0x07, 0xf8, 0xfc, 0x01, 0xf0, 0xff, 0x87, 0xf0, 0xfc, 0x00, 0xff, 0xf0, 0x03, 0xf8, 0x00, 0x00,
+  0x03, 0x00, 0x03, 0xf8, 0xfc, 0x03, 0xf0, 0xfe, 0x03, 0xf0, 0xfc, 0x00, 0xf8, 0x00, 0x03, 0xf0, 0x00, 0x00,
+  0x07, 0xc0, 0x01, 0xfc, 0xfc, 0x03, 0xf1, 0xfc, 0x07, 0xf0, 0xfc, 0x00, 0xfc, 0x00, 0x87, 0xf0, 0x00, 0x00,
+  0x0f, 0xe0, 0x01, 0xfc, 0x7e, 0x03, 0xe1, 0xfc, 0x07, 0xf0, 0xfc, 0x00, 0xfc, 0x03, 0xef, 0xe0, 0x00, 0x00,
+  0x0f, 0xf0, 0x01, 0xfc, 0x7e, 0x07, 0xe1, 0xfc, 0x0f, 0xf0, 0xfc, 0x00, 0xfc, 0x0f, 0xef, 0xc1, 0xf8, 0x00,
+  0x07, 0xfe, 0x03, 0xf8, 0x7f, 0x9f, 0xc0, 0xfe, 0x3f, 0xf0, 0xfc, 0x00, 0x7e, 0x3f, 0xef, 0xcf, 0xfc, 0x00,
+  0x03, 0xff, 0xff, 0xf8, 0x3f, 0xff, 0xc0, 0xff, 0xff, 0xf0, 0xfc, 0x00, 0x7f, 0xff, 0xcf, 0xff, 0xfe, 0x00,
+  0x01, 0xff, 0xff, 0xf0, 0x1f, 0xff, 0x80, 0x7f, 0xff, 0xf0, 0xfc, 0x00, 0x3f, 0xff, 0x8f, 0xff, 0xfe, 0x00,
+  0x00, 0x3f, 0xff, 0xc0, 0x0f, 0xfe, 0x00, 0x3f, 0xff, 0xf0, 0xfc, 0x00, 0x1f, 0xff, 0x0f, 0xff, 0xc0, 0x00,
+  0x00, 0x07, 0xff, 0x00, 0x03, 0xfc, 0x00, 0x0f, 0xf3, 0xe0, 0x7c, 0x00, 0x0f, 0xf8, 0x03, 0xfc, 0x00, 0x00,
+  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+};
+
+const lv_img_dsc_t sz = {
+  .header.cf = LV_IMG_CF_INDEXED_1BIT,
+  .header.always_zero = 0,
+  .header.reserved = 0,
+  .header.w = 140,
+  .header.h = 68,
+  .data_size = 1232,
+  .data = sz_map,
+};
+
+
diff --git a/app/boards/shields/nice_view/widgets/peripheral_status.c b/app/boards/shields/nice_view/widgets/peripheral_status.c
index b9da1996..e7459fc5 100644
--- a/app/boards/shields/nice_view/widgets/peripheral_status.c
+++ b/app/boards/shields/nice_view/widgets/peripheral_status.c
@@ -25,6 +25,7 @@ LOG_MODULE_DECLARE(zmk, CONFIG_ZMK_LOG_LEVEL);
 
 LV_IMG_DECLARE(balloon);
 LV_IMG_DECLARE(mountain);
+LV_IMG_DECLARE(sz);
 
 static sys_slist_t widgets = SYS_SLIST_STATIC_INIT(&widgets);
 
@@ -115,8 +116,9 @@ int zmk_widget_status_init(struct zmk_widget_status *widget, lv_obj_t *parent) {
     lv_canvas_set_buffer(top, widget->cbuf, CANVAS_SIZE, CANVAS_SIZE, LV_IMG_CF_TRUE_COLOR);
 
     lv_obj_t *art = lv_img_create(widget->obj);
-    bool random = sys_rand32_get() & 1;
-    lv_img_set_src(art, random ? &balloon : &mountain);
+    /* bool random = sys_rand32_get() & 1; */
+    /* lv_img_set_src(art, random ? &balloon : &mountain); */
+    lv_img_set_src(art, &sz);
     lv_obj_align(art, LV_ALIGN_TOP_LEFT, 0, 0);
 
     sys_slist_append(&widgets, &widget->node);
